/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 13100000.0;
	SIMULATION_TIME = 13100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 655300.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("intro")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("keycode")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("keycode[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode";
}

SIGNAL("keycode[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode";
}

SIGNAL("keycode[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode";
}

SIGNAL("keycode[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "keycode";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("opA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("opA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opA";
}

SIGNAL("opA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opA";
}

SIGNAL("opA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opA";
}

SIGNAL("opA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opA";
}

SIGNAL("opB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("opB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opB";
}

SIGNAL("opB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opB";
}

SIGNAL("opB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opB";
}

SIGNAL("opB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "opB";
}

SIGNAL("negar")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sigA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sigB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 655000.0;
			LEVEL 1 FOR 655000.0;
		}
	}
}

TRANSITION_LIST("intro")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 655300.0;
		LEVEL 0 FOR 655300.0;
		LEVEL 1 FOR 2621200.0;
		LEVEL 0 FOR 2621200.0;
		LEVEL 1 FOR 2621200.0;
		LEVEL 0 FOR 1310600.0;
		LEVEL 1 FOR 2615200.0;
	}
}

TRANSITION_LIST("keycode[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 9174800.0;
		LEVEL 0 FOR 2615200.0;
	}
}

TRANSITION_LIST("keycode[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1311200.0;
		LEVEL 0 FOR 3931800.0;
		LEVEL 1 FOR 1310600.0;
		LEVEL 0 FOR 2621200.0;
		LEVEL 1 FOR 1310600.0;
		LEVEL 0 FOR 1304600.0;
	}
}

TRANSITION_LIST("keycode[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2621200.0;
		LEVEL 0 FOR 1310600.0;
		LEVEL 1 FOR 2621200.0;
		LEVEL 0 FOR 2621200.0;
		LEVEL 1 FOR 3925800.0;
	}
}

TRANSITION_LIST("keycode[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 6553600.0;
		LEVEL 1 FOR 1310600.0;
		LEVEL 0 FOR 2621200.0;
		LEVEL 1 FOR 1304600.0;
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 340000.0;
		LEVEL 0 FOR 315300.0;
		LEVEL 1 FOR 12444700.0;
	}
}

TRANSITION_LIST("opA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1965006.381;
		LEVEL 1 FOR 9170000.0;
		LEVEL 0 FOR 1964993.619;
	}
}

TRANSITION_LIST("opA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1965006.413;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 654993.587;
	}
}

TRANSITION_LIST("opA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1965006.424;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 7860000.0;
		LEVEL 1 FOR 1964993.576;
	}
}

TRANSITION_LIST("opA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8515006.079;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 654993.921;
	}
}

TRANSITION_LIST("opB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3275006.408;
		LEVEL 1 FOR 9170000.0;
		LEVEL 0 FOR 654993.592;
	}
}

TRANSITION_LIST("opB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3275009.531;
		LEVEL 1 FOR 3930000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 654990.469;
	}
}

TRANSITION_LIST("opB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3275006.379;
		LEVEL 1 FOR 3930000.0;
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 654993.621;
	}
}

TRANSITION_LIST("opB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11135006.229;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 654993.771;
	}
}

TRANSITION_LIST("negar")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3931800.0;
		LEVEL 1 FOR 2621200.0;
		LEVEL 0 FOR 2621200.0;
		LEVEL 1 FOR 1310600.0;
		LEVEL 0 FOR 2615200.0;
	}
}

TRANSITION_LIST("sigA")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4585007.305;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1964992.695;
	}
}

TRANSITION_LIST("sigB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11135010.805;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 654989.195;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "intro";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "negar";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "keycode";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "keycode[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "keycode[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "keycode[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "keycode[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "opA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "opA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "opA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "opA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "opA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "sigA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "opB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "opB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "opB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "opB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "opB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "sigB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 16024;
	MASTER = TRUE;
}
;
