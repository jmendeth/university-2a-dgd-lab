/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 800.0;
	SIMULATION_TIME = 800.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 40.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("AxB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AxB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("AxB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AxB";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
	}
}

TRANSITION_LIST("AxB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.088;
		LEVEL 1 FOR 0.658;
		LEVEL 0 FOR 0.878;
		LEVEL 1 FOR 0.339;
		LEVEL 0 FOR 318.126;
		LEVEL 1 FOR 1.042;
		LEVEL 0 FOR 3.916;
		LEVEL 1 FOR 0.599;
		LEVEL 0 FOR 154.443;
		LEVEL 1 FOR 0.657;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 0.582;
		LEVEL 0 FOR 83.292;
		LEVEL 1 FOR 1.06;
		LEVEL 0 FOR 144.556;
	}
}

TRANSITION_LIST("AxB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.523;
		LEVEL 1 FOR 0.193;
		LEVEL 0 FOR 160.34;
		LEVEL 1 FOR 0.479;
		LEVEL 0 FOR 2.521;
		LEVEL 1 FOR 0.399;
		LEVEL 0 FOR 79.217;
		LEVEL 1 FOR 0.306;
		LEVEL 0 FOR 0.238;
		LEVEL 1 FOR 0.288;
		LEVEL 0 FOR 75.365;
		LEVEL 1 FOR 0.684;
		LEVEL 0 FOR 0.771;
		LEVEL 1 FOR 1.948;
		LEVEL 0 FOR 0.756;
		LEVEL 1 FOR 0.302;
		LEVEL 0 FOR 0.815;
		LEVEL 1 FOR 78.307;
		LEVEL 0 FOR 0.339;
		LEVEL 1 FOR 75.421;
		LEVEL 0 FOR 0.657;
		LEVEL 1 FOR 0.764;
		LEVEL 0 FOR 0.769;
		LEVEL 1 FOR 0.764;
		LEVEL 0 FOR 81.62;
		LEVEL 1 FOR 0.296;
		LEVEL 0 FOR 1.195;
		LEVEL 1 FOR 0.145;
		LEVEL 0 FOR 0.145;
		LEVEL 1 FOR 78.461;
		LEVEL 0 FOR 0.202;
		LEVEL 1 FOR 65.77;
	}
}

TRANSITION_LIST("AxB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.253;
		LEVEL 1 FOR 1.203;
		LEVEL 0 FOR 0.669;
		LEVEL 1 FOR 0.198;
		LEVEL 0 FOR 157.93;
		LEVEL 1 FOR 0.422;
		LEVEL 0 FOR 4.471;
		LEVEL 1 FOR 0.34;
		LEVEL 0 FOR 0.399;
		LEVEL 1 FOR 78.681;
		LEVEL 0 FOR 1.048;
		LEVEL 1 FOR 74.637;
		LEVEL 0 FOR 1.732;
		LEVEL 1 FOR 0.771;
		LEVEL 0 FOR 1.934;
		LEVEL 1 FOR 0.379;
		LEVEL 0 FOR 0.679;
		LEVEL 1 FOR 0.509;
		LEVEL 0 FOR 78.754;
		LEVEL 1 FOR 0.198;
		LEVEL 0 FOR 75.803;
		LEVEL 1 FOR 0.369;
		LEVEL 0 FOR 82.79;
		LEVEL 1 FOR 0.519;
		LEVEL 0 FOR 0.214;
		LEVEL 1 FOR 0.414;
		LEVEL 0 FOR 145.684;
	}
}

TRANSITION_LIST("AxB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.49;
		LEVEL 1 FOR 0.54;
		LEVEL 0 FOR 2.415;
		LEVEL 1 FOR 0.063;
		LEVEL 0 FOR 0.142;
		LEVEL 1 FOR 0.292;
		LEVEL 0 FOR 81.988;
		LEVEL 1 FOR 0.509;
		LEVEL 0 FOR 76.963;
		LEVEL 1 FOR 2.488;
		LEVEL 0 FOR 80.161;
		LEVEL 1 FOR 0.357;
		LEVEL 0 FOR 0.312;
		LEVEL 1 FOR 0.079;
		LEVEL 0 FOR 74.811;
		LEVEL 1 FOR 0.392;
		LEVEL 0 FOR 0.659;
		LEVEL 1 FOR 0.15;
		LEVEL 0 FOR 0.204;
		LEVEL 1 FOR 0.109;
		LEVEL 0 FOR 3.568;
		LEVEL 1 FOR 0.239;
		LEVEL 0 FOR 157.102;
		LEVEL 1 FOR 81.217;
		LEVEL 0 FOR 0.382;
		LEVEL 1 FOR 0.512;
		LEVEL 0 FOR 79.427;
		LEVEL 1 FOR 0.319;
		LEVEL 0 FOR 0.347;
		LEVEL 1 FOR 64.763;
	}
}

TRANSITION_LIST("AxB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.324;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 1.094;
		LEVEL 1 FOR 0.547;
		LEVEL 0 FOR 82.5;
		LEVEL 1 FOR 75.768;
		LEVEL 0 FOR 3.539;
		LEVEL 1 FOR 0.622;
		LEVEL 0 FOR 80.428;
		LEVEL 1 FOR 0.138;
		LEVEL 0 FOR 0.277;
		LEVEL 1 FOR 0.222;
		LEVEL 0 FOR 0.526;
		LEVEL 1 FOR 73.952;
		LEVEL 0 FOR 84.457;
		LEVEL 1 FOR 0.539;
		LEVEL 0 FOR 0.127;
		LEVEL 1 FOR 75.173;
		LEVEL 0 FOR 0.522;
		LEVEL 1 FOR 0.283;
		LEVEL 0 FOR 0.109;
		LEVEL 1 FOR 0.356;
		LEVEL 0 FOR 83.125;
		LEVEL 1 FOR 0.518;
		LEVEL 0 FOR 1.442;
		LEVEL 1 FOR 77.308;
		LEVEL 0 FOR 66.717;
	}
}

TRANSITION_LIST("AxB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 91.45;
		LEVEL 1 FOR 0.397;
		LEVEL 0 FOR 0.233;
		LEVEL 1 FOR 0.092;
		LEVEL 0 FOR 0.063;
		LEVEL 1 FOR 0.434;
		LEVEL 0 FOR 2.458;
		LEVEL 1 FOR 79.085;
		LEVEL 0 FOR 79.562;
		LEVEL 1 FOR 0.976;
		LEVEL 0 FOR 0.919;
		LEVEL 1 FOR 0.124;
		LEVEL 0 FOR 78.585;
		LEVEL 1 FOR 0.82;
		LEVEL 0 FOR 75.381;
		LEVEL 1 FOR 0.536;
		LEVEL 0 FOR 0.167;
		LEVEL 1 FOR 0.241;
		LEVEL 0 FOR 0.495;
		LEVEL 1 FOR 0.257;
		LEVEL 0 FOR 0.155;
		LEVEL 1 FOR 0.023;
		LEVEL 0 FOR 2.478;
		LEVEL 1 FOR 0.551;
		LEVEL 0 FOR 0.876;
		LEVEL 1 FOR 78.433;
		LEVEL 0 FOR 0.4;
		LEVEL 1 FOR 0.06;
		LEVEL 0 FOR 74.78;
		LEVEL 1 FOR 0.457;
		LEVEL 0 FOR 3.997;
		LEVEL 1 FOR 0.565;
		LEVEL 0 FOR 0.077;
		LEVEL 1 FOR 78.954;
		LEVEL 0 FOR 81.229;
		LEVEL 1 FOR 64.69;
	}
}

TRANSITION_LIST("AxB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 91.454;
		LEVEL 1 FOR 0.54;
		LEVEL 0 FOR 0.467;
		LEVEL 1 FOR 0.468;
		LEVEL 0 FOR 83.78;
		LEVEL 1 FOR 0.92;
		LEVEL 0 FOR 75.38;
		LEVEL 1 FOR 0.665;
		LEVEL 0 FOR 0.924;
		LEVEL 1 FOR 1.632;
		LEVEL 0 FOR 156.779;
		LEVEL 1 FOR 0.85;
		LEVEL 0 FOR 2.371;
		LEVEL 1 FOR 0.39;
		LEVEL 0 FOR 1.177;
		LEVEL 1 FOR 0.365;
		LEVEL 0 FOR 0.468;
		LEVEL 1 FOR 0.357;
		LEVEL 0 FOR 153.902;
		LEVEL 1 FOR 0.182;
		LEVEL 0 FOR 2.173;
		LEVEL 1 FOR 1.883;
		LEVEL 0 FOR 159.103;
		LEVEL 1 FOR 0.39;
		LEVEL 0 FOR 63.38;
	}
}

TRANSITION_LIST("AxB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 88.482;
		LEVEL 1 FOR 0.686;
		LEVEL 0 FOR 3.575;
		LEVEL 1 FOR 79.432;
		LEVEL 0 FOR 76.307;
		LEVEL 1 FOR 0.686;
		LEVEL 0 FOR 3.575;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 75.739;
		LEVEL 1 FOR 0.686;
		LEVEL 0 FOR 3.575;
		LEVEL 1 FOR 79.432;
		LEVEL 0 FOR 76.307;
		LEVEL 1 FOR 0.686;
		LEVEL 0 FOR 230.832;
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 240.0;
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 160.0;
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 240.0;
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 320.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "AxB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "AxB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
