/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 26000000.0;
	SIMULATION_TIME = 26000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1310.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ecnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("numx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("numx[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 19847;
			LEVEL 0 FOR 655.0;
			LEVEL 1 FOR 655.0;
		}
		LEVEL 0 FOR 430.0;
	}
}

TRANSITION_LIST("ecnt")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 26000000.0;
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 458.5;
		LEVEL 1 FOR 25999541.5;
	}
}

TRANSITION_LIST("numx[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1047352.007;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 262000.0;
			LEVEL 0 FOR 1048000.0;
		}
		LEVEL 1 FOR 62647.993;
	}
}

TRANSITION_LIST("numx[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 523352.245;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 524000.0;
			LEVEL 0 FOR 786000.0;
		}
		LEVEL 1 FOR 524000.0;
		LEVEL 0 FOR 62647.755;
	}
}

TRANSITION_LIST("numx[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 261352.007;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 262000.0;
			LEVEL 0 FOR 262000.0;
			LEVEL 1 FOR 262000.0;
			LEVEL 0 FOR 524000.0;
		}
		LEVEL 1 FOR 262000.0;
		LEVEL 0 FOR 262000.0;
		LEVEL 1 FOR 262000.0;
		LEVEL 0 FOR 62647.993;
	}
}

TRANSITION_LIST("numx[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130352.816;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 131000.0;
			LEVEL 0 FOR 131000.0;
		}
		LEVEL 1 FOR 131000.0;
		LEVEL 0 FOR 62647.184;
	}
}

TRANSITION_LIST("numx[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 104153.68;
		NODE
		{
			REPEAT = 197;
			LEVEL 1 FOR 26200.0;
			LEVEL 0 FOR 104800.0;
		}
		LEVEL 1 FOR 26200.0;
		LEVEL 0 FOR 62646.32;
	}
}

TRANSITION_LIST("numx[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 51751.922;
		NODE
		{
			REPEAT = 198;
			LEVEL 1 FOR 52400.0;
			LEVEL 0 FOR 78600.0;
		}
		LEVEL 1 FOR 10248.078;
	}
}

TRANSITION_LIST("numx[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25552.053;
		NODE
		{
			REPEAT = 198;
			LEVEL 1 FOR 26200.0;
			LEVEL 0 FOR 26200.0;
			LEVEL 1 FOR 26200.0;
			LEVEL 0 FOR 52400.0;
		}
		LEVEL 1 FOR 26200.0;
		LEVEL 0 FOR 10247.947;
	}
}

TRANSITION_LIST("numx[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 12452.264;
		NODE
		{
			REPEAT = 991;
			LEVEL 1 FOR 13100.0;
			LEVEL 0 FOR 13100.0;
		}
		LEVEL 1 FOR 13100.0;
		LEVEL 0 FOR 10247.736;
	}
}

TRANSITION_LIST("numx[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9833.203;
		NODE
		{
			REPEAT = 1983;
			LEVEL 1 FOR 2620.0;
			LEVEL 0 FOR 10480.0;
		}
		LEVEL 1 FOR 2620.0;
		LEVEL 0 FOR 10246.797;
	}
}

TRANSITION_LIST("numx[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4592.225;
		NODE
		{
			REPEAT = 1984;
			LEVEL 1 FOR 5240.0;
			LEVEL 0 FOR 7860.0;
		}
		LEVEL 1 FOR 5007.775;
	}
}

TRANSITION_LIST("numx[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1973.456;
		NODE
		{
			REPEAT = 1984;
			LEVEL 1 FOR 2620.0;
			LEVEL 0 FOR 2620.0;
			LEVEL 1 FOR 2620.0;
			LEVEL 0 FOR 5240.0;
		}
		LEVEL 1 FOR 2620.0;
		LEVEL 0 FOR 2620.0;
		LEVEL 1 FOR 2386.544;
	}
}

TRANSITION_LIST("numx[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 662.266;
		NODE
		{
			REPEAT = 9923;
			LEVEL 1 FOR 1310.0;
			LEVEL 0 FOR 1310.0;
		}
		LEVEL 1 FOR 1077.734;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ecnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "numx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "numx[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 3;
}

TIME_BAR
{
	TIME = 16675;
	MASTER = TRUE;
}
;
