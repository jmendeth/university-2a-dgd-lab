/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 150000000.0;
	SIMULATION_TIME = 150000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1310000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("numx")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("numx[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("numx[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "numx";
}

SIGNAL("nrst")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ecnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("numx[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1637506.984;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 655000.0;
			LEVEL 0 FOR 655000.0;
		}
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 655000.0;
			LEVEL 0 FOR 1965000.0;
			NODE
			{
				REPEAT = 8;
				LEVEL 1 FOR 655000.0;
				LEVEL 0 FOR 655000.0;
			}
		}
		LEVEL 1 FOR 655000.0;
		LEVEL 0 FOR 1965000.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 655000.0;
			LEVEL 0 FOR 655000.0;
		}
		LEVEL 1 FOR 655000.0;
		LEVEL 0 FOR 987493.016;
	}
}

TRANSITION_LIST("numx[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2292506.244;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 2620000.0;
		}
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 2620000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1310000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 2620000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 1310000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 1310000.0;
		}
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 2620000.0;
		}
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 2620000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1310000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 2620000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 1310000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 1310000.0;
		}
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 2620000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 987493.756;
	}
}

TRANSITION_LIST("numx[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3602506.509;
		LEVEL 1 FOR 3930000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 3930000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 2620000.0;
			LEVEL 0 FOR 5240000.0;
			LEVEL 1 FOR 2620000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 3930000.0;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 2620000.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5240000.0;
			LEVEL 1 FOR 2620000.0;
			LEVEL 0 FOR 3930000.0;
			LEVEL 1 FOR 2620000.0;
		}
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 3930000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 3930000.0;
		LEVEL 1 FOR 987493.491;
	}
}

TRANSITION_LIST("numx[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7532506.262;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 5240000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 6550000.0;
		}
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 2620000.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 5240000.0;
			LEVEL 1 FOR 1310000.0;
			LEVEL 0 FOR 6550000.0;
			LEVEL 1 FOR 1310000.0;
		}
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 2620000.0;
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 6550000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 5240000.0;
		LEVEL 1 FOR 1310000.0;
		LEVEL 0 FOR 3607493.738;
	}
}

TRANSITION_LIST("numx[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8842506.078;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 6550000.0;
			LEVEL 0 FOR 7860000.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 7860000.0;
			LEVEL 0 FOR 6550000.0;
		}
		LEVEL 1 FOR 7860000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 7860000.0;
			LEVEL 1 FOR 6550000.0;
		}
		LEVEL 0 FOR 3607493.922;
	}
}

TRANSITION_LIST("numx[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15392506.348;
		LEVEL 1 FOR 14410000.0;
		LEVEL 0 FOR 14410000.0;
		LEVEL 1 FOR 15720000.0;
		LEVEL 0 FOR 28820000.0;
		LEVEL 1 FOR 14410000.0;
		LEVEL 0 FOR 14410000.0;
		LEVEL 1 FOR 14410000.0;
		LEVEL 0 FOR 18017493.652;
	}
}

TRANSITION_LIST("numx[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 29802506.261;
		LEVEL 1 FOR 30130000.0;
		LEVEL 0 FOR 43230000.0;
		LEVEL 1 FOR 28820000.0;
		LEVEL 0 FOR 18017493.739;
	}
}

TRANSITION_LIST("numx[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 59932506.067;
		LEVEL 1 FOR 14410000.0;
		LEVEL 0 FOR 57640000.0;
		LEVEL 1 FOR 14410000.0;
		LEVEL 0 FOR 3607493.933;
	}
}

TRANSITION_LIST("nrst")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 148690000.0;
	}
}

TRANSITION_LIST("ecnt")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5240000.0;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 1310000.0;
			LEVEL 1 FOR 11790000.0;
		}
		LEVEL 0 FOR 1310000.0;
		LEVEL 1 FOR 11790000.0;
		LEVEL 0 FOR 660000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 229;
			LEVEL 0 FOR 327500.0;
			LEVEL 1 FOR 327500.0;
		}
		LEVEL 0 FOR 5000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nrst";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ecnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "numx";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "numx[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "numx[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
